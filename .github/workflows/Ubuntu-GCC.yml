# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Ubuntu-GCC

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4.1.4
      with:
        fetch-depth: 0
        fetch-tags: true  # 获取所有的 Git 标签

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_CXX_COMPILER=g++ -DCMAKE_C_COMPILER=gcc -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build-Bin
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Build-Env
      # Build your program with the given configuration
      run: cd ${{github.workspace}}/env/redis-7.2.1 && make MALLOC=libc

    - name: Pack-Env
      run: cp ${{github.workspace}}/env/redis-7.2.1/src/redis-server ${{github.workspace}}/bin/Koro_Caster_Service/
    - name: Get tag version
      id: tag_version
      run: echo "::set-output name=tag_version::$(git describe --tags --dirty=-dev)"

    - name: Upload Release
      uses: actions/upload-artifact@v4.3.3
      with:
        # 上传后文件的名称
        name: Koro_Caster_Service-${{ steps.tag_version.outputs.tag_version }}-ububtu-gcc
        # 上传文件的路径
        path: ${{github.workspace}}/bin/Koro_Caster_Service/

